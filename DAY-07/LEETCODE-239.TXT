class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        // vector<int>result;
        // int n=nums.size();

        // for(int i=0;i<=n-k;i++) {
        //     int maxVal=nums[i];
        //     for (int j=i;j<i+k;j++) {
        //         maxVal=max(maxVal,nums[j]);
        //     }
        //     result.push_back(maxVal);
        // }

        // return result;

        priority_queue<pair<int,int>> pq; 
        vector<int>re;

        for(int i=0;i<nums.size();i++) {
            pq.push({nums[i],i});

            if(i>=k-1){
                while(!pq.empty()&&pq.top().second<=i-k){
                    pq.pop();
                }
                re.push_back(pq.top().first);
            }
        }

        return re;
    }
};